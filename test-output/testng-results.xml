<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="3" passed="2" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2018-06-24T23:19:59Z" name="Default suite" finished-at="2018-06-24T23:20:18Z" duration-ms="18809">
    <groups>
    </groups>
    <test started-at="2018-06-24T23:19:59Z" name="Default test" finished-at="2018-06-24T23:20:18Z" duration-ms="18809">
      <class name="com.extentreport.demo.ExtentReportWithRegistration">
        <test-method is-config="true" signature="openApplication()[pri:0, instance:com.extentreport.demo.ExtentReportWithRegistration@5c90e579]" started-at="2018-06-24T19:19:59Z" name="openApplication" finished-at="2018-06-24T19:20:07Z" duration-ms="7810" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openApplication -->
        <test-method is-config="true" signature="setup()[pri:0, instance:com.extentreport.demo.ExtentReportWithRegistration@5c90e579]" started-at="2018-06-24T19:20:07Z" name="setup" finished-at="2018-06-24T19:20:07Z" duration-ms="200" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="bookflight()[pri:0, instance:com.extentreport.demo.ExtentReportWithRegistration@5c90e579]" started-at="2018-06-24T19:20:07Z" name="bookflight" finished-at="2018-06-24T19:20:09Z" duration-ms="1162" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- bookflight -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.extentreport.demo.ExtentReportWithRegistration@5c90e579]" started-at="2018-06-24T19:20:09Z" name="tearDown" finished-at="2018-06-24T19:20:09Z" duration-ms="442" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=bookflight status=SUCCESS method=ExtentReportWithRegistration.bookflight()[pri:0, instance:com.extentreport.demo.ExtentReportWithRegistration@5c90e579] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup()[pri:0, instance:com.extentreport.demo.ExtentReportWithRegistration@5c90e579]" started-at="2018-06-24T19:20:09Z" name="setup" finished-at="2018-06-24T19:20:09Z" duration-ms="16" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="verifyRegisterLink()[pri:0, instance:com.extentreport.demo.ExtentReportWithRegistration@5c90e579]" started-at="2018-06-24T19:20:09Z" name="verifyRegisterLink" finished-at="2018-06-24T19:20:12Z" duration-ms="2932" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyRegisterLink -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.extentreport.demo.ExtentReportWithRegistration@5c90e579]" started-at="2018-06-24T19:20:12Z" name="tearDown" finished-at="2018-06-24T19:20:12Z" duration-ms="117" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyRegisterLink status=SUCCESS method=ExtentReportWithRegistration.verifyRegisterLink()[pri:0, instance:com.extentreport.demo.ExtentReportWithRegistration@5c90e579] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup()[pri:0, instance:com.extentreport.demo.ExtentReportWithRegistration@5c90e579]" started-at="2018-06-24T19:20:12Z" name="setup" finished-at="2018-06-24T19:20:12Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="userRegistraion()[pri:1, instance:com.extentreport.demo.ExtentReportWithRegistration@5c90e579]" started-at="2018-06-24T19:20:12Z" name="userRegistraion" finished-at="2018-06-24T19:20:18Z" duration-ms="5468" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:513)
	at org.testng.Assert.assertTrue(Assert.java:42)
	at org.testng.Assert.assertTrue(Assert.java:52)
	at com.extentreport.demo.ExtentReportWithRegistration.userRegistraion(ExtentReportWithRegistration.java:110)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:104)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:645)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:851)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1177)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:756)
	at org.testng.TestRunner.run(TestRunner.java:610)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:387)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:382)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1293)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1218)
	at org.testng.TestNG.runSuites(TestNG.java:1133)
	at org.testng.TestNG.run(TestNG.java:1104)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- userRegistraion -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.extentreport.demo.ExtentReportWithRegistration@5c90e579]" started-at="2018-06-24T19:20:18Z" name="tearDown" finished-at="2018-06-24T19:20:18Z" duration-ms="382" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=userRegistraion status=FAILURE method=ExtentReportWithRegistration.userRegistraion()[pri:1, instance:com.extentreport.demo.ExtentReportWithRegistration@5c90e579] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="closepplication()[pri:0, instance:com.extentreport.demo.ExtentReportWithRegistration@5c90e579]" started-at="2018-06-24T19:20:18Z" name="closepplication" finished-at="2018-06-24T19:20:18Z" duration-ms="247" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closepplication -->
      </class> <!-- com.extentreport.demo.ExtentReportWithRegistration -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
